; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+c o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Starting Jack-in Terminal: cmd.exe /d /c lein update-in :dependencies conj [nrepl,"0.8.3"] -- update-in :plugins conj [cider/cider-nrepl,"0.26.0"] -- update-in [:repl-options,:nrepl-middleware] conj '["cider.nrepl/cider-middleware"]' -- repl :headless
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS: 
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉cellular-automata-clojure.core꞉>  ; Use `alt+enter` to evaluate
; Jack-in done.
clj꞉cellular-automata-clojure.core꞉> 
#'cellular-automata-clojure.core/print-state
clj꞉cellular-automata-clojure.core꞉> 
...#...
nil
clj꞉cellular-automata-clojure.core꞉> 
#'cellular-automata-clojure.core/print-state
clj꞉cellular-automata-clojure.core꞉> 
...#...
nil
clj꞉cellular-automata-clojure.core꞉> 
#'cellular-automata-clojure.core/visual-state
clj꞉cellular-automata-clojure.core꞉> 
"...#..."
clj꞉cellular-automata-clojure.core꞉> 
; CompilerException java.lang.RuntimeException: Unable to resolve symbol: visualize in this context, compiling:(d:\Productivity\Repositories\cellular-automata-clojure\src\cellular_automata_clojure\core.clj:30:20) 
clj꞉cellular-automata-clojure.core꞉> 
nil
clj꞉cellular-automata-clojure.core꞉> 
#'cellular-automata-clojure.core/apply-rule
clj꞉cellular-automata-clojure.core꞉> 
#'cellular-automata-clojure.core/get-next-state
clj꞉cellular-automata-clojure.core꞉> 
#'cellular-automata-clojure.core/split-up
clj꞉cellular-automata-clojure.core꞉> 
#'cellular-automata-clojure.core/visualize
clj꞉cellular-automata-clojure.core꞉> 
#'cellular-automata-clojure.core/-main
clj꞉cellular-automata-clojure.core꞉> 
...#...
..###..
.##..#.
##.####
...#...
..###..
.##..#.
##.####
...#...
..###..
[0 1 1 0 0 1 0]
clj꞉cellular-automata-clojure.core꞉> 
#'cellular-automata-clojure.core/-main
clj꞉cellular-automata-clojure.core꞉> 
...#..#.............#
#.######...........##
..#.....#.........##.
.###...###.......##.#
.#..#.##..#.....##..#
.####.#.####...##.###
.#....#.#...#.##..#..
###..##.##.##.#.####.
#..###..#..#..#.#....
####..#########.##..#
[0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 1 0 1 1 1]
clj꞉cellular-automata-clojure.core꞉> 
